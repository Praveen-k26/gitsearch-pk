{"version":3,"sources":["context/ThemeContext.js","components/button/button.component.jsx","components/searchbar/searchbar.component.jsx","components/spinner/spinner.component.jsx","components/card/card.component.jsx","components/repoList/repoList.component.jsx","nyc1.jpg","components/profileCard/profileCard.component.jsx","components/errorMessage/errorMessage.component.jsx","graphql/queryHandler.js","components/Layout/layout.component.jsx","components/toggleSwitch/toggleSwitch.component.jsx","App.js","reportWebVitals.js","errorHandling/errorHandling.js","index.js"],"names":["themes","dark","color","background","light","ThemeContext","React","createContext","CustomButton","children","onclick","otherProps","className","onClick","data-test","SearchBar","placeholder","handleChange","searchText","setSearchText","handleClick","onSubmit","label","onClear","value","autoFocus","type","onChange","Spinner","Card","cardData","searchParam","length","map","data","index","src","user","avatarUrl","alt","login","bio","email","websiteUrl","location","href","twitterUsername","followers","totalCount","following","RepoList","repos","more","query","loadMore","fetch","repo","url","name","createdAt","UpdatedAt","stargazerCount","forkCount","id","ProfileCardComponent","data-type","image","company","ErrorMessage","props","val","QueryHandler","REPO_SEARCH","gql","useQuery","variables","userId","loading","error","repositories","nodes","Layout","useContext","useState","userSearch","setUserSearch","e","preventDefault","console","log","target","Toggle","toggled","App","theme","setTheme","setToggled","style","s","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorHandling","message","window","reload","cache","createHttpLink","uri","InMemoryCache","client","ApolloClient","headers","Accept","Authorization","ReactDOM","render","fallbackComponent","document","getElementById"],"mappings":"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","file":"static/js/main.56324623.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport const themes = {\n    dark: {\n        color: 'white',\n        background: 'black',\n    },\n    light:{\n        color: 'black',\n        background: '#8280b8'\n    }\n}\n\nconst ThemeContext = React.createContext(themes.dark);\n\nexport default ThemeContext","import React from 'react';\n\n\nconst CustomButton = ({children,onclick, ...otherProps})  => (\n    <button {...otherProps} className='button,' onClick={onclick} data-test='customButton'>\n        {children}\n    </button>\n);\n\nexport default CustomButton","import React from 'react';\nimport { MdSearch } from \"react-icons/md\";\nimport './searchbar.styles.css';\nimport CustomButton from \"../button/button.component\";\n\n\nconst SearchBar = ({placeholder,searchText,setSearchText, handleChange,handleClick, label,onSubmit,onClear, value, ...otherProps}) => {\n\n\n    return (\n    <div className='section' data-test='searchbarsection'>\n        <div className='section-center'>\n            <form onSubmit={onSubmit} data-test='onsubmit' className='searchBarForm'>\n                <div className='form-control'>\n                    <MdSearch />\n                    <input\n                        autoFocus\n                        type='text'\n                        placeholder={placeholder}\n                        value={value}\n                        onChange={handleChange}\n                        data-test='searchfield'\n                        onClick={handleClick}\n                        {...otherProps}\n                        className='search-inputfield'\n                    />\n                    <span>\n                        <CustomButton data-test='clearForm'  className='clear-Form' type='submit' onclick={onClear} >Clear</CustomButton>\n                    </span>\n                    <span>\n                       <CustomButton data-test='submitButton' type='submit'>Submit</CustomButton>\n                    </span>\n                </div>\n\n            </form>\n\n        </div>\n    </div>\n\n)\n}\nexport default SearchBar;","import React from 'react';\n\nimport './spinner.styles.scss';\n\nconst Spinner = () => (\n    <div className='spinner-overlay' data-test='spinner'>\n        <div className='spinner-container' />\n    </div>\n);\n\nexport default Spinner;","import React from 'react';\nimport QueryHandler from \"../../graphql/queryHandler\";\n\nimport './card.styles.scss'\n\nconst Card = ({\n                    cardData,\n                  searchText}) => {\n\n    return (\n        <div className='wrapper' data-test='card-wrapper'>\n            {searchText && <QueryHandler searchParam={searchText} />}\n            {cardData && cardData.length > 0 ? cardData.map((data,index) => {\n                return <>\n                    <div className=\"container\">\n                        <header className=\"header\">\n                            <img src={data.user.avatarUrl} alt={data.user.login}/>\n                            <h4>{data.user.login}</h4>\n                        </header>\n                        <p className=\"bio\">{data.user.bio}</p>\n                        <p className=\"email\">{data.user.email}</p>\n                        <p className=\"website\">{data.user.websiteUrl}</p>\n                        <p className=\"location\">{data.user.location}</p>\n                        <a href={data.user.twitterUsername} className='a'>Follow</a>\n                        <span><p>Followers: {data.user.followers.totalCount}</p></span>\n                        <span><p>Following: {data.user.following.totalCount}</p></span>\n                    </div>\n                </>\n            }) : \"PROFILE\"\n            }\n        </div>\n    )\n}\n\nexport default Card;\n","import React from 'react';\nimport './repoList.styles.css';\nimport QueryHandler from \"../../graphql/queryHandler\";\nimport CustomButton from \"../button/button.component\";\n\n\nconst RepoList = ({totalCount, data,repos, more,query,loadMore, fetch,searchText,...otherProps}) => {\n\n    return (\n        <>\n            {searchText && <QueryHandler searchParam={searchText} />}\n                <div className=\"card-wrapper\">\n                    <div className='table-card'>\n                        <div className=\"card\">\n                            <table className='table'>\n                                <thead className='tablehead'>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Repo</th>\n                                    <th>Created on</th>\n                                    <th>Updated</th>\n                                    <th>Stars</th>\n                                    <th>Forks</th>\n                                </tr>\n                                </thead>\n                                <tbody className='tbody'>\n                                {repos && repos.length > 0 ? repos.map((repo,index) => {\n                                    return <tr key={repo.id}>\n                                        <td>{index +1}</td>\n                                        <td>\n                                            <a href={repo.url}>{repo.name}</a>\n                                        </td>\n                                        <td>{repo.createdAt}</td>\n                                        <td>{repo.UpdatedAt}</td>\n                                        <td>{repo.stargazerCount}</td>\n                                        <td>{repo.forkCount}</td>\n                                    </tr>\n                                }) : \"\"}\n                                </tbody>\n                            </table>\n                            {/*{totalCount && totalCount > 20 ?*/}\n                            {/*    <CustomButton onclick={loadMore}>More</CustomButton>*/}\n                            {/*    : ''*/}\n                            {/*}*/}\n                        </div>\n                    </div>\n                </div>\n        </>\n    )\n}\n\nexport default RepoList;\n","export default __webpack_public_path__ + \"static/media/nyc1.8ff21855.jpg\";","import React from 'react';\nimport './profileCard.styles.css';\nimport image from \"../../nyc1.jpg\";\n\n\nconst ProfileCardComponent = ({data}) => {\n    return (\n        <>\n            <div className='container' data-type='profile-card'>\n                <div className=\"card-wrapper\">\n                    <div className=\"card\">\n                        <img src={image} alt='card-background' className='card-img' data-test='card-background'/>\n                        <img src={data.user.avatarUrl} alt=\"profile image\" className=\"profile-img\" data-test='profile-image'/>\n                        <h1 data-test='login-name'>{data.user.login}</h1>\n                        <p className='job-title' data-type='job-title'>{data.user.company}</p>\n                        <p className='about' data-test='bio'>{data.user.bio}</p>\n                        <p className='about' data-test='socialmedia'>Twitter: {data.user.twitterUsername}</p>\n                        <a href=\"#\" className='btn' data-test='contact'>Contact</a>\n\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default ProfileCardComponent;\n\n","import React from 'react';\n\n\nconst ErrorMessage =(props) => (\n    <div>\n       <h2 className='error-message'>Error!! {props.val}</h2>\n    </div>\n)\n\nexport default ErrorMessage;","import React from 'react';\nimport {gql} from \"apollo-boost\";\n// import gql from \"graphql-tag\";\nimport {useQuery} from 'react-apollo';\n// import {useQuery} from \"@apollo/client\";\nimport Spinner from \"../components/spinner/spinner.component\";\nimport Card from \"../components/card/card.component\";\nimport RepoListComponent from \"../components/repoList/repoList.component\";\nimport ProfileCardComponent from \"../components/profileCard/profileCard.component\";\nimport './queryHandler.css';\nimport ErrorMessage from \"../components/errorMessage/errorMessage.component\";\n\nconst QueryHandler = ({searchText}) => {\n\n\n const REPO_SEARCH =\n    gql`\nquery initialLoad ($userId: String!){\n  user(login: $userId) {\n    login\n    id\n    bio\n    avatarUrl\n    company\n    email\n    location\n    \n    followers{\n      totalCount\n    }\n    following{\n      totalCount\n    }\n    twitterUsername\n    websiteUrl\n    repositories(last: 20) {\n      totalCount\n      nodes {\n         forkCount\n        stargazerCount\n        updatedAt\n        createdAt\n        description\n        name\n        url\n        viewerPermission\n        id\n      }\n      \n      pageInfo{\n        endCursor\n        \n      }\n    }\n  }\n}\n`\n\n//\n    const {loading, data, error} = useQuery(REPO_SEARCH, {\n        variables: {userId:searchText}\n    });\n\n\n\n    //A spinner will be displayed if the status is loading.\n    if(loading) {\n        return <Spinner />\n    }\n\n    //An error message if something goes wrong.\n    if(searchText && error) {\n        return <ErrorMessage/>\n    }\n\n    //if Data is available.\n    if(data) {\n        return (\n            <>\n                {/*<SearchBar query={REPO_SEARCH}/>*/}\n                <div className='displayResult' data-test='displayResult'>\n                    <RepoListComponent\n                        repos={data && data.user.repositories.nodes}\n                        totalCount={data && data.user.repositories.totalCount}\n                        // loadMore={fetchMoreRepos}\n                    />\n                    <ProfileCardComponent data={data}/>\n                </div>\n            </>\n        )\n    }\n    if(data) {\n        return (\n            <>\n                <Card\n                    data={data}\n                />\n            </>\n        )\n    }\n    return \"\"\n}\nexport default QueryHandler;\n\n//------------------------------------------------------//\n// const LOAD_MORE =\n//         gql`\n// query loadMoreReps ($after: String!){\n//   user(login: $userId) {\n//     id\n//     bio\n//     avatarUrl\n//     company\n//     email\n//     location\n//     twitterUsername\n//     websiteUrl\n//     followers {\n//         totalCount\n//     }\n//     repositories(first: 10, isLocked: false ) {\n//       totalCount\n//       nodes {\n//         forkCount\n//         stargazerCount\n//         updatedAt\n//         createdAt\n//         description\n//         name\n//         url\n//         viewerPermission\n//         id\n//       }\n//       pageInfo{\n//         endCursor\n//       }\n//     }\n//   }\n// }\n// `\n\n//    const fetchMoreRepos = () => {\n//     const {endcursor} = data.user.repositories.pageInfo;\n//     console.log(\"LoadMORE-------\", pageInfo);\n//\n//     data && fetchMore({\n//         variables: { after: endcursor, userId:searchText},\n//         updateQuery: (prevResult, {fetchMoreResults }) => {\n//             if(!fetchMoreResults) return  prevResult;\n//             fetchMoreResults.user.repositories = [\n//                 ...prevResult.user.repositories,\n//                 ...fetchMoreResults.user.repositories\n//             ];\n//             return fetchMoreResults;\n//         }\n//     })\n// }","import React, {useContext, useState} from 'react';\nimport ThemeContext from \"../../context/ThemeContext\";\nimport SearchBar from \"../searchbar/searchbar.component\";\nimport QueryHandler from \"../../graphql/queryHandler\";\nimport './layout.styles.css'\n\n\nconst Layout = () => {\n    const themes = useContext(ThemeContext);\n\n    const [userSearch, setUserSearch] = useState('');\n    const [searchText, setSearchText] = useState('');\n\n\n\n    const handleSubmit=(e)=> {\n        e.preventDefault();\n        console.log(\"Form Submit Clicked\", userSearch);\n        setSearchText(userSearch);\n    }\n    const handleSearch = (e) => {\n        setUserSearch(e.target.value);\n    }\n\n    const clearForm = (e)=> {\n        e.preventDefault();\n        setUserSearch(\"\");\n        console.log(\"Form Cleared\", userSearch);\n    }\n\n\n            return (\n            <div className='container' data-test='layoutComponent'>\n                    <div className='title-div'>\n                        <span><p className='title-1'>Git</p></span><span><p className='title-2'>Search</p></span>\n                    </div>\n                    <div className='searchdiv'>\n                        <SearchBar\n                            placeholder=\"Enter User Name\"\n                            onSubmit={handleSubmit}\n                            onClear={clearForm}\n                            handleChange={handleSearch}\n                            value={userSearch}\n                        /></div>\n                <QueryHandler searchText={searchText}/>\n            </div>\n            );\n\n}\n\nexport default Layout;\n\n","import React from \"react\";\nimport './toggleSwitch.styles.css';\n\nconst Toggle=({ toggled, onClick })=> {\n    return (\n        <div onClick={onClick} className={`toggle${toggled ? \" night\" : \"\"}`}>\n            <div className=\"notch\">\n                <div className=\"crater\" />\n                <div className=\"crater\" />\n            </div>\n            <div>\n                <div className=\"shape sm\" />\n                <div className=\"shape sm\" />\n                <div className=\"shape md\" />\n                <div className=\"shape lg\" />\n            </div>\n        </div>\n    );\n}\n\nexport default Toggle;","import React, {useState, useContext} from 'react';\nimport Layout from \"./components/Layout/layout.component\";\nimport ThemeContext, {themes} from './context/ThemeContext'\n\nimport './App.css';\nimport Toggle from \"./components/toggleSwitch/toggleSwitch.component\";\n\n\n\nfunction App() {\n\n    const [theme,setTheme] = useState(themes.light);\n    const [toggled, setToggled] = useState(false);\n    const handleClick = () => {\n        setToggled(s=> !s);\n        theme === themes.dark ? setTheme(themes.light) : setTheme(themes.dark);\n    }\n\n    return (\n        <div className=\"App\" style={theme}>\n            <header className='navbar' data-type='navbar'>\n                <div className='nav-title'>Git Search</div>\n                <div className='nav-item'>Switch Theme</div>\n                <Toggle toggled={toggled} onClick={handleClick}/>\n            </header>\n            <ThemeContext.Provider value={themes.dark} >\n            <Layout/>\n            </ThemeContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport CustomButton from \"../components/button/button.component\";\n\nconst ErrorHandling = (props) => {\n    const {error} = props;\n\n    const handleClick = () => {\n        window.location.reload();\n    };\n\n    const message = error ?.message || error;\n\n\n    return (\n        <div>\n            <h2>Damn!!Error..</h2>\n            <p>{message}</p>\n            <p>Try again, Click Refresh</p>\n            <CustomButton type='button' onClick={handleClick}>Refresh</CustomButton>\n        </div>\n    )\n}\n\nexport default ErrorHandling;","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ApolloProvider} from 'react-apollo';\nimport {ApolloProvider as ApolloHookProvider} from 'react-apollo-hooks';\nimport {createHttpLink} from 'apollo-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\nimport ApolloClient from 'apollo-boost';\nimport {ErrorBoundary} from 'react-error-boundary';\nimport ErrorHandling from \"./errorHandling/errorHandling\";\nimport ThemeContext, {themes} from \"./context/ThemeContext\";\nimport userContext from \"./components/navbar/navbar.component\";\nimport Navbar from \"./components/navbar/navbar.component\";\n\n\nconst httpLink = createHttpLink({\n    uri: 'https://api.github.com/graphql',\n});\n\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n    // link: httpLink,\n    uri: 'https://api.github.com/graphql',\n    cache,\n    headers: {\n        Accept: \"application/json\",\n        Authorization: `token 1c27da9ed2f9d64086bb67c9b3c17f0207d2b5c9`,\n        // Authorization: `token f1ce8aa4d0eaa23b2b4bc076cd72200a51453ad4`,\n        // Authorization:`token ${process.env.REACT_APP_GITHUB_TOKEN}`,\n        'content-type': 'application/json',\n    }\n});\n\n// client.query({\n//     query: gql `\n// {\n//   user(login: Praveen-k26) {\n//     repositories(last: 100, isLocked: false) {\n//       totalCount\n//       nodes {\n//         createdAt\n//         description\n//         name\n//         url\n//         viewerPermission\n//         id\n//       }\n//     }\n//   }\n// }\n//     `\n// }).then(res => console.log(res));\n\n\n// const client = new ApolloClient({\n//     uri: 'https://api.github.com/graphql',\n//     request: async operation => {\n//         operation.setContext ({\n//             headers: {\n//                 Authorization: `token a34d779bed56ef8df59898da1e1623767e165906`,\n//                 // Authorization: `token ${process.env.REACT_APP_GITHUB_TOKEN }`,\n//                 'content-type': 'application/json',\n//\n//             }\n//         });\n//     }\n// })\n\n\n// const REPOS_QUERY = gql`\n//   query repoQuery($after: String) {\n//     viewer {\n//       repositories(first: 5, isFork: true, after: $after) {\n//         edges {\n//           node {\n//             id\n//             name\n//           }\n//         }\n//         pageInfo {\n//           endCursor\n//         }\n//       }\n//     }\n//   }\n// `;\n//\n// const REPO_SEARCH =\n//     gql`\n// query ($userId: String!){\n//   user(login: $userId) {\n//     repositories(last: 100, isLocked: false) {\n//       totalCount\n//       nodes {\n//         createdAt\n//         description\n//         name\n//         url\n//         viewerPermission\n//         id\n//       }\n//     }\n//   }\n// }\n// `\n//\n// const [value, setValue] = useState(false);\n\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        {/*<ApolloHookProvider client={client}>*/}\n        <ThemeContext.Provider value={themes.dark}>\n            <ErrorBoundary fallbackComponent={ErrorHandling}>\n                <App/>\n            </ErrorBoundary>\n        </ThemeContext.Provider>\n        {/*</ApolloHookProvider>*/}\n    </ApolloProvider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}