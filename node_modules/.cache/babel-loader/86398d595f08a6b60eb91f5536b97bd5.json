{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/praveenkoru/Downloads/Koru/practice/gitsearch-pk/src/graphql/queryHandler.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql } from \"apollo-boost\"; // import gql from \"graphql-tag\";\n\nimport { useQuery } from 'react-apollo'; // import {useQuery} from \"@apollo/client\";\n\nimport Spinner from \"../components/spinner/spinner.component\";\nimport Card from \"../components/card/card.component\";\nimport RepoListComponent from \"../components/repoList/repoList.component\";\nimport ProfileCardComponent from \"../components/profileCard/profileCard.component\";\nimport './queryHandler.css';\nimport ErrorMessage from \"../components/errorMessage/errorMessage.component\";\n\nconst QueryHandler = ({\n  searchText\n}) => {\n  _s();\n\n  const REPO_SEARCH = gql`\nquery initialLoad ($userId: String!){\n  user(login: $userId) {\n    login\n    id\n    bio\n    avatarUrl\n    company\n    email\n    location\n    \n    followers{\n      totalCount\n    }\n    following{\n      totalCount\n    }\n    twitterUsername\n    websiteUrl\n    repositories(last: 20) {\n      totalCount\n      nodes {\n         forkCount\n        stargazerCount\n        updatedAt\n        createdAt\n        description\n        name\n        url\n        viewerPermission\n        id\n      }\n      \n      pageInfo{\n        endCursor\n        \n      }\n    }\n  }\n}\n`; //\n\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(REPO_SEARCH, {\n    variables: {\n      userId: searchText\n    }\n  }); //A spinner will be displayed if the status is loading.\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  } //An error message if something goes wrong.\n\n\n  if (searchText && error) {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  } //if Data is available.\n\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayResult\",\n        \"data-test\": \"displayResult\",\n        children: [/*#__PURE__*/_jsxDEV(RepoListComponent, {\n          repos: data && data.user.repositories.nodes,\n          totalCount: data && data.user.repositories.totalCount // loadMore={fetchMoreRepos}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProfileCardComponent, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  return \"\";\n};\n\n_s(QueryHandler, \"4k2moIvLDw2nUBcLPAvnagsOU6g=\", false, function () {\n  return [useQuery];\n});\n\n_c = QueryHandler;\nexport default QueryHandler; //------------------------------------------------------//\n// const LOAD_MORE =\n//         gql`\n// query loadMoreReps ($after: String!){\n//   user(login: $userId) {\n//     id\n//     bio\n//     avatarUrl\n//     company\n//     email\n//     location\n//     twitterUsername\n//     websiteUrl\n//     followers {\n//         totalCount\n//     }\n//     repositories(first: 10, isLocked: false ) {\n//       totalCount\n//       nodes {\n//         forkCount\n//         stargazerCount\n//         updatedAt\n//         createdAt\n//         description\n//         name\n//         url\n//         viewerPermission\n//         id\n//       }\n//       pageInfo{\n//         endCursor\n//       }\n//     }\n//   }\n// }\n// `\n//    const fetchMoreRepos = () => {\n//     const {endcursor} = data.user.repositories.pageInfo;\n//     console.log(\"LoadMORE-------\", pageInfo);\n//\n//     data && fetchMore({\n//         variables: { after: endcursor, userId:searchText},\n//         updateQuery: (prevResult, {fetchMoreResults }) => {\n//             if(!fetchMoreResults) return  prevResult;\n//             fetchMoreResults.user.repositories = [\n//                 ...prevResult.user.repositories,\n//                 ...fetchMoreResults.user.repositories\n//             ];\n//             return fetchMoreResults;\n//         }\n//     })\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"QueryHandler\");","map":{"version":3,"sources":["/Users/praveenkoru/Downloads/Koru/practice/gitsearch-pk/src/graphql/queryHandler.js"],"names":["React","gql","useQuery","Spinner","Card","RepoListComponent","ProfileCardComponent","ErrorMessage","QueryHandler","searchText","REPO_SEARCH","loading","data","error","variables","userId","user","repositories","nodes","totalCount"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,cAAlB,C,CACA;;AACA,SAAQC,QAAR,QAAuB,cAAvB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,yCAApB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,OAAOC,oBAAP,MAAiC,iDAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,YAAP,MAAyB,mDAAzB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAGtC,QAAMC,WAAW,GACdT,GAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzCC,CAHsC,CA8CvC;;AACI,QAAM;AAACU,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAAyBX,QAAQ,CAACQ,WAAD,EAAc;AACjDI,IAAAA,SAAS,EAAE;AAACC,MAAAA,MAAM,EAACN;AAAR;AADsC,GAAd,CAAvC,CA/CmC,CAqDnC;;AACA,MAAGE,OAAH,EAAY;AACR,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAxDkC,CA0DnC;;;AACA,MAAGF,UAAU,IAAII,KAAjB,EAAwB;AACpB,wBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GA7DkC,CA+DnC;;;AACA,MAAGD,IAAH,EAAS;AACL,wBACI;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,qBAAU,eAAzC;AAAA,gCACI,QAAC,iBAAD;AACI,UAAA,KAAK,EAAEA,IAAI,IAAIA,IAAI,CAACI,IAAL,CAAUC,YAAV,CAAuBC,KAD1C;AAEI,UAAA,UAAU,EAAEN,IAAI,IAAIA,IAAI,CAACI,IAAL,CAAUC,YAAV,CAAuBE,UAF/C,CAGI;;AAHJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,oBAAD;AAAsB,UAAA,IAAI,EAAEP;AAA5B;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,qBADJ;AAaH;;AACD,MAAGA,IAAH,EAAS;AACL,wBACI;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,IAAI,EAAEA;AADV;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAOH;;AACD,SAAO,EAAP;AACH,CAzFD;;GAAMJ,Y;UA+C6BN,Q;;;KA/C7BM,Y;AA0FN,eAAeA,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport {gql} from \"apollo-boost\";\n// import gql from \"graphql-tag\";\nimport {useQuery} from 'react-apollo';\n// import {useQuery} from \"@apollo/client\";\nimport Spinner from \"../components/spinner/spinner.component\";\nimport Card from \"../components/card/card.component\";\nimport RepoListComponent from \"../components/repoList/repoList.component\";\nimport ProfileCardComponent from \"../components/profileCard/profileCard.component\";\nimport './queryHandler.css';\nimport ErrorMessage from \"../components/errorMessage/errorMessage.component\";\n\nconst QueryHandler = ({searchText}) => {\n\n\n const REPO_SEARCH =\n    gql`\nquery initialLoad ($userId: String!){\n  user(login: $userId) {\n    login\n    id\n    bio\n    avatarUrl\n    company\n    email\n    location\n    \n    followers{\n      totalCount\n    }\n    following{\n      totalCount\n    }\n    twitterUsername\n    websiteUrl\n    repositories(last: 20) {\n      totalCount\n      nodes {\n         forkCount\n        stargazerCount\n        updatedAt\n        createdAt\n        description\n        name\n        url\n        viewerPermission\n        id\n      }\n      \n      pageInfo{\n        endCursor\n        \n      }\n    }\n  }\n}\n`\n\n//\n    const {loading, data, error} = useQuery(REPO_SEARCH, {\n        variables: {userId:searchText}\n    });\n\n\n\n    //A spinner will be displayed if the status is loading.\n    if(loading) {\n        return <Spinner />\n    }\n\n    //An error message if something goes wrong.\n    if(searchText && error) {\n        return <ErrorMessage/>\n    }\n\n    //if Data is available.\n    if(data) {\n        return (\n            <>\n                {/*<SearchBar query={REPO_SEARCH}/>*/}\n                <div className='displayResult' data-test='displayResult'>\n                    <RepoListComponent\n                        repos={data && data.user.repositories.nodes}\n                        totalCount={data && data.user.repositories.totalCount}\n                        // loadMore={fetchMoreRepos}\n                    />\n                    <ProfileCardComponent data={data}/>\n                </div>\n            </>\n        )\n    }\n    if(data) {\n        return (\n            <>\n                <Card\n                    data={data}\n                />\n            </>\n        )\n    }\n    return \"\"\n}\nexport default QueryHandler;\n\n//------------------------------------------------------//\n// const LOAD_MORE =\n//         gql`\n// query loadMoreReps ($after: String!){\n//   user(login: $userId) {\n//     id\n//     bio\n//     avatarUrl\n//     company\n//     email\n//     location\n//     twitterUsername\n//     websiteUrl\n//     followers {\n//         totalCount\n//     }\n//     repositories(first: 10, isLocked: false ) {\n//       totalCount\n//       nodes {\n//         forkCount\n//         stargazerCount\n//         updatedAt\n//         createdAt\n//         description\n//         name\n//         url\n//         viewerPermission\n//         id\n//       }\n//       pageInfo{\n//         endCursor\n//       }\n//     }\n//   }\n// }\n// `\n\n//    const fetchMoreRepos = () => {\n//     const {endcursor} = data.user.repositories.pageInfo;\n//     console.log(\"LoadMORE-------\", pageInfo);\n//\n//     data && fetchMore({\n//         variables: { after: endcursor, userId:searchText},\n//         updateQuery: (prevResult, {fetchMoreResults }) => {\n//             if(!fetchMoreResults) return  prevResult;\n//             fetchMoreResults.user.repositories = [\n//                 ...prevResult.user.repositories,\n//                 ...fetchMoreResults.user.repositories\n//             ];\n//             return fetchMoreResults;\n//         }\n//     })\n// }"]},"metadata":{},"sourceType":"module"}